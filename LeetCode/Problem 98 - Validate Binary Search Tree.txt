Problem 98 - Validate Binary Search Tree
	https://leetcode.com/problems/validate-binary-search-tree/

	Given the root of a binary tree, determine if it is a valid binary search tree (BST).

	A valid BST is defined as follows:

		-The left subtree of a node contains only nodes with keys less than the node's key.
		-The right subtree of a node contains only nodes with keys greater than the node's key.
		-Both the left and right subtrees must also be binary search trees.

Solution - Python
	https://leetcode.com/submissions/detail/431079496/

	# Definition for a binary tree node.
	# class TreeNode:
	#     def __init__(self, val=0, left=None, right=None):
	#         self.val = val
	#         self.left = left
	#         self.right = right
	
	class Solution:
	    def isValidBST(self, root: TreeNode, min_val = float('-inf'), max_val = float('inf')) -> bool:
        	if not root:
	            return True
    	    if root.val <=  min_val or root.val >= max_val: return False
        	return self.isValidBST(root.left, min_val, root.val) and self.isValidBST(root.right, root.val, max_val)